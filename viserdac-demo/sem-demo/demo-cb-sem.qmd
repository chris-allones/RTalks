---
title: "Demonstration: Covariance-based SEM (CB-SEM)"
date: last-modified
format: 
  html:
    css: custom.scss
    self-contained: true
    mainfont: arial
    fontsize: 1em
    linestretch: 1.5
    toc: true
    toc-location: left
    number-sections: true
    code-fold: false
    theme:
      light: cosmo
      dark: darkly
execute:
  message: false
  warning: false
  fig-align: center
editor: visual
bibliography: 
  - references.bib
csl: apa_ref_fm.csl
---


```{r}
#| echo: false
knitr::opts_chunk$set(comment = "",
                      message = FALSE,
                      warning = FALSE
                      )

# setting working directory
setwd("~/GitHub-repo/RTalks/dbm-special-lecture-2024/sem-demo")

```


## Libraries

```{r}
# Library
library(tidyverse)
library(readxl)
library(janitor)
library(lavaan)
library(psych)
library(MVN)
library(semTools)
library(lavaanPlot)
```

## Data

```{r}
## data
case_data <- read_excel("00_data/e_bus_customer_satisfaction.xlsx") %>% 
 clean_names()

case_data_items <- case_data %>%
 select(bt1:bt7, bd1:bd4, emp1:emp5, cs1:cs3, ep1:ep4, ls1:ls5)

## datatable
DT::datatable(case_data)
```


## Exploratory factor analysis

### Scree plot

```{r}
## Scree plot using parallel analysis
fa.parallel(case_data_items, fa = "fa")
```

### Factor extraction

```{r}
## Factor loading
bus_fa <- fa(r = case_data_items,
             nfactors = 6,
             rotate = "varimax")

print(bus_fa$loadings, sort = TRUE, cutoff = 0.4)
```

## Confirmatory factor analysis


### Multivariate normality test

```{r}
MVN::mvn(data = case_data_items, mvnTest = "mardia", desc = F)
```


### Specifying the measurement model

```{r}
## Specifying CFA model
cfa_model <- "tangible =~ bt1 + bt2 + bt4 + bt5 + bt6 + bt7
              drivers_quality =~ bd1 + bd2 + bd3 + bd4
              empathy =~ emp1 + emp2 + emp3 + emp4 + emp5
              env_perf =~ ep1 + ep2 + ep3 + ep4
              customer_sat =~ cs1 + cs2 + cs3
              life_sat =~ ls1 + ls2 + ls3 + ls4 + ls5"
```

### Fitting the model

```{r}
## Fitting CFA model
cfa_fit <- cfa(model = cfa_model, 
               data = case_data_items, 
               estimator = "MLR")

## Summary results
cfa_fit %>% summary(standardized = TRUE,
                     fit.measures = TRUE)

## plotting cfa model
lavaanPlot(model = cfa_fit, coefs = TRUE, covs = TRUE)
```

### Relibility and validity tests

```{r}
## Reliability and validity 
reliability(cfa_fit) %>% round(2)

```

## Structural equation modelling

### Specifying structural model

```{r}
## Specifying structural model
ebus_model <- "tangible =~ bt1 + bt2 + bt4 + bt5 + bt6 + bt7
              drivers_quality =~ bd1 + bd2 + bd3 + bd4
              empathy =~ emp1 + emp2 + emp3 + emp4 + emp5
              env_perf =~ ep1 + ep2 + ep3 + ep4
              customer_sat =~ cs1 + cs2 + cs3
              life_sat =~ ls1 + ls2 + ls3 + ls4 + ls5
              
              # structural model
              customer_sat ~ tangible + drivers_quality + empathy + env_perf
              life_sat ~ customer_sat"
```

### Fitting the structural model

```{r}
## Fitting structural model
ebus_fit <- sem(model = ebus_model,
                data = case_data,
                estimator = "MLR")

## Summary results
ebus_fit %>% summary(standardized = TRUE,
                     fit.measures = TRUE,
                     rsq = TRUE)

## plotting sem model using LavaanPlot package
lavaanPlot(model = ebus_fit, coefs = TRUE, covs = TRUE, stars = TRUE, digits = 2)

## plotting sem model using semPlot package
semPlot::semPaths(object = ebus_fit,
                  what = "std",
                  layout = "tree",
                  rotation = 2,
                  sizeMan = 3,
                  sizeLat = 5,
                  intercepts = FALSE,
                  residuals = FALSE,
                  exoCov = F)
```

### Estimating indirect effects

#### Specifying model with indirect effects

```{r}
### SEM model with mediation
ebus_model_ie <- "tangible =~ bt1 + bt2 + bt4 + bt5 + bt6 + bt7
              drivers_quality =~ bd1 + bd2 + bd3 + bd4
              empathy =~ emp1 + emp2 + emp3 + emp4 + emp5
              env_perf =~ ep1 + ep2 + ep3 + ep4
              customer_sat =~ cs1 + cs2 + cs3
              life_sat =~ ls1 + ls2 + ls3 + ls4 + ls5
              
              # structural model
              customer_sat ~ a*tangible + b*drivers_quality + c*empathy + d*env_perf
              life_sat ~ e*customer_sat
             
              # indirect effects
              ie_tangible := a*e
              ie_drivers_qual := b*e
              ie_empathy := c*e
              ie_en_perf := d*e"

```

#### Fitting the model with indirect effects

```{r}
### Fitting structural model with mediation 
ebus_fit_ie <- sem(model = ebus_model_ie,
                   data = case_data,
                   estimator = "MLR")

### Summary results
ebus_fit_ie %>% summary(standardized = TRUE,
                        fit.measures = TRUE,
                        rsq = TRUE)

```