---
title: "Demonstration: Partial least-square (PLS-SEM)"
date: last-modified
format: 
  html:
    css: custom.scss
    self-contained: true
    mainfont: arial
    fontsize: 1em
    linestretch: 1.5
    toc: true
    toc-location: left
    number-sections: true
    code-fold: false
    theme:
      light: cosmo
      dark: darkly
execute:
  message: false
  warning: false
  fig-align: center
editor: visual
bibliography: 
  - references.bib
csl: apa_ref_fm.csl
---


```{r}
#| echo: false

knitr::opts_chunk$set(comment = "",
                      message = FALSE,
                      warning = FALSE
                      )
# setting working directory
setwd("~/GitHub-repo/RTalks/dbm-special-lecture-2024/sem-demo")
```

## Libraries

```{r}
# Library
library(tidyverse)
library(readxl)
library(janitor)
library(seminr)
library(psych)
library(MVN)
library(semTools)
```

## Data

```{r}
## data
case_data <- read_excel("00_data/e_bus_customer_satisfaction.xlsx") %>% 
 clean_names()

case_data_items <- case_data %>%
 select(bt1:bt7, bd1:bd4, emp1:emp5, cs1:cs3, ep1:ep4, ls1:ls5)
```

## Exploratory factor analysis

### Scree plot

```{r}
## Scree plot using parallel analysis
fa.parallel(case_data_items, fa = "fa")
```

### Factor extraction

```{r}
## Factor loading
bus_fa <- fa(r = case_data_items,
             nfactors = 6,
             rotate = "varimax")

print(bus_fa$loadings, sort = TRUE, cutoff = 0.4)
```

## Partial-least square SEM

### Specifying the measurement model

```{r}
pls_mm_ebus <- 
  constructs(
  composite("tangible", multi_items("bt", c(1:2, 5:7))),
  composite("drivers_quality", multi_items("bd", 1:4)),
  composite("empathy", multi_items("emp", 1:5)),
  composite("env_perf", multi_items("ep", 1:4)),
  composite("customer_sat", multi_items("cs", 1:3)),
  composite("life_sat", multi_items("ls", 1:5))
)

plot(pls_mm_ebus)
```

### Specifying the structural model

```{r}
pls_sm_ebus <- 
  relationships(
  paths(from = c("tangible", "drivers_quality", "empathy", "env_perf"),
        to = "customer_sat"),
  paths(from = "customer_sat", to = "life_sat")
)

plot(pls_sm_ebus)
```

### Estimating PLS-SEM model

```{r}

pls_model_ebus <- 
  estimate_pls(
  data = case_data,
  measurement_model = pls_mm_ebus,
  structural_model = pls_sm_ebus
)


plot(pls_model_ebus)


summary_pls_model_ebus <- summary(pls_model_ebus)
summary_pls_model_ebus
```

### Bootstraping PLS-SEM

```{r}

## bootstrapping PLS-SEM model
boot_pls_model_ebus <- bootstrap_model(seminr_model = pls_model_ebus,
                nboot = 1000)

## summary results
summary_boot_pls_model_ebus <- summary(boot_pls_model_ebus, alpha = 0.10)
```

### Factor loadings

```{r}
# DT::datatable(summary_boot_pls_model_ebus$bootstrapped_loadings %>% round(3))
summary_boot_pls_model_ebus$bootstrapped_loadings
```

### Validity and reliability


```{r}
# DT::datatable(summary_pls_model_ebus$reliability %>% round(3))
## Reliability measurment 
summary_pls_model_ebus$reliability
```

### Discriminant validity

```{r}
## Fornell-Larcker criterion results
summary_pls_model_ebus$validity$fl_criteria
```

#### Heterotrait-Monotrait ratio

```{r}
summary_pls_model_ebus$validity$htmt
```

#### VIF

```{r}
summary_pls_model_ebus$vif_antecedents
```
